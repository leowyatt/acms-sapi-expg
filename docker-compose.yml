version: "3.9"
services:
  db:
    profiles: ["dev", "db"]
    image: db
    build:
      target: db
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_DB: "db"
      POSTGRES_USER: "db"
      POSTGRES_PASSWORD: "db"
    working_dir: /app
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
      - ./migrations/entrypoint/01-roles.sql:/docker-entrypoint-initdb.d/01-roles.sql
    restart: always
    ports:
      - 127.0.0.1:4021:5432
    command: "postgres -c max_connections=300 -c shared_buffers=512MB -c effective_cache_size=4GB -c work_mem=16MB -c maintenance_work_mem=512MB -c random_page_cost=1.1 -c temp_file_limit=10GB -c log_min_duration_statement=200ms -c idle_in_transaction_session_timeout=10s -c lock_timeout=1s -c statement_timeout=60s -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.max=10000 -c pg_stat_statements.track=all -c wal_level=logical -c max_replication_slots=10 -c max_wal_senders=10 -c log_min_messages=fatal"

  dba:
    profiles: ["dba"]
    image: dba
    build:
      target: dba
    environment:
      PGADMIN_CONFIG_SERVER_MODE: "True"
      PGADMIN_DEFAULT_EMAIL: "admin@db.local"
      PGADMIN_DEFAULT_PASSWORD: "db1337@"
    volumes:
      - dba_data:/var/lib/pgadmin
      - ./migrations/servers.json:/pgadmin4/servers.json
    ports:
      - 127.0.0.1:4022:80
    restart: always
    depends_on:
      - db

  # -----------------------------------------------------------------------------
  api:
    profiles: ["dev", "api"]
    image: api
    build:
      target: api
    restart: always
    working_dir: /app
    environment:
      - DATABASE_URL=postgres://db:db@db:5432/db
    volumes:
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./jsconfig.json:/app/jsconfig.json
      - ./src:/app/src
      - api_node:/app/node_modules
    stdin_open: true
    tty: true
    ports:
      - 0.0.0.0:4010:4010
    depends_on:
      - db

#-----------------------------------------------------------------------------
networks:
  sapi_default:

# -----------------------------------------------------------------------------
volumes:
  api_node:
  db_data:
  dba_data:
